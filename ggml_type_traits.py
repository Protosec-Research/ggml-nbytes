type_traits = {
    'GGML_TYPE_I8': {
        'type_name': 'i8',
        'blck_size': 1,
        'type_size': 1,  # sizeof(int8_t)
        'is_quantized': False,
    },
    'GGML_TYPE_I16': {
        'type_name': 'i16',
        'blck_size': 1,
        'type_size': 2,  # sizeof(int16_t)
        'is_quantized': False,
    },
    'GGML_TYPE_I32': {
        'type_name': 'i32',
        'blck_size': 1,
        'type_size': 4,  # sizeof(int32_t)
        'is_quantized': False,
    },
    'GGML_TYPE_I64': {
        'type_name': 'i64',
        'blck_size': 1,
        'type_size': 8,  # sizeof(int64_t)
        'is_quantized': False,
    },
    'GGML_TYPE_F64': {
        'type_name': 'f64',
        'blck_size': 1,
        'type_size': 8,  # sizeof(double)
        'is_quantized': False,
    },
    'GGML_TYPE_F32': {
        'type_name': 'f32',
        'blck_size': 1,
        'type_size': 4,  # sizeof(float)
        'is_quantized': False,
    },
    'GGML_TYPE_F16': {
        'type_name': 'f16',
        'blck_size': 1,
        'type_size': 2,  # sizeof(ggml_fp16_t)
        'is_quantized': False,
        'to_float': 'ggml_fp16_to_fp32_row',
        'from_float_ref': 'ggml_fp32_to_fp16_row',
    },
    'GGML_TYPE_Q4_0': {
        'type_name': 'q4_0',
        'blck_size': 'QK4_0',  # This would need to be defined elsewhere
        'type_size': 'sizeof(block_q4_0)',  # This would need to be defined
        'is_quantized': True,
        'to_float': 'dequantize_row_q4_0',
        'from_float_ref': 'quantize_row_q4_0_ref',
    },
    'GGML_TYPE_Q4_1': {
        'type_name': 'q4_1',
        'blck_size': 'QK4_1',
        'type_size': 'sizeof(block_q4_1)',
        'is_quantized': True,
        'to_float': 'dequantize_row_q4_1',
        'from_float_ref': 'quantize_row_q4_1_ref',
    },
    'GGML_TYPE_Q4_2': {
        'type_name': 'DEPRECATED',
        'blck_size': 0,
        'type_size': 0,
        'is_quantized': False,
    },
    'GGML_TYPE_Q4_3': {
        'type_name': 'DEPRECATED',
        'blck_size': 0,
        'type_size': 0,
        'is_quantized': False,
    },
    'GGML_TYPE_Q5_0': {
        'type_name': 'q5_0',
        'blck_size': 'QK5_0',
        'type_size': 'sizeof(block_q5_0)',
        'is_quantized': True,
        'to_float': 'dequantize_row_q5_0',
        'from_float_ref': 'quantize_row_q5_0_ref',
    },
    'GGML_TYPE_Q5_1': {
        'type_name': 'q5_1',
        'blck_size': 'QK5_1',
        'type_size': 'sizeof(block_q5_1)',
        'is_quantized': True,
        'to_float': 'dequantize_row_q5_1',
        'from_float_ref': 'quantize_row_q5_1_ref',
    },
    'GGML_TYPE_Q8_0': {
        'type_name': 'q8_0',
        'blck_size': 'QK8_0',
        'type_size': 'sizeof(block_q8_0)',
        'is_quantized': True,
        'to_float': 'dequantize_row_q8_0',
        'from_float_ref': 'quantize_row_q8_0_ref',
    },
    'GGML_TYPE_Q8_1': {
        'type_name': 'q8_1',
        'blck_size': 'QK8_1',
        'type_size': 'sizeof(block_q8_1)',
        'is_quantized': True,
        'from_float_ref': 'quantize_row_q8_1_ref',
    },
    'GGML_TYPE_Q2_K': {
        'type_name': 'q2_K',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_q2_K)',
        'is_quantized': True,
        'to_float': 'dequantize_row_q2_K',
        'from_float_ref': 'quantize_row_q2_K_ref',
    },
    'GGML_TYPE_Q3_K': {
        'type_name': 'q3_K',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_q3_K)',
        'is_quantized': True,
        'to_float': 'dequantize_row_q3_K',
        'from_float_ref': 'quantize_row_q3_K_ref',
    },
    'GGML_TYPE_Q4_K': {
        'type_name': 'q4_K',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_q4_K)',
        'is_quantized': True,
        'to_float': 'dequantize_row_q4_K',
        'from_float_ref': 'quantize_row_q4_K_ref',
    },
    'GGML_TYPE_Q5_K': {
        'type_name': 'q5_K',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_q5_K)',
        'is_quantized': True,
        'to_float': 'dequantize_row_q5_K',
        'from_float_ref': 'quantize_row_q5_K_ref',
    },
    'GGML_TYPE_Q6_K': {
        'type_name': 'q6_K',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_q6_K)',
        'is_quantized': True,
        'to_float': 'dequantize_row_q6_K',
        'from_float_ref': 'quantize_row_q6_K_ref',
    },
    'GGML_TYPE_IQ2_XXS': {
        'type_name': 'iq2_xxs',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_iq2_xxs)',
        'is_quantized': True,
        'to_float': 'dequantize_row_iq2_xxs',
        'from_float_ref': None,
    },
    'GGML_TYPE_IQ2_XS': {
        'type_name': 'iq2_xs',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_iq2_xs)',
        'is_quantized': True,
        'to_float': 'dequantize_row_iq2_xs',
        'from_float_ref': None,
    },
    'GGML_TYPE_IQ3_XXS': {
        'type_name': 'iq3_xxs',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_iq3_xxs)',
        'is_quantized': True,
        'to_float': 'dequantize_row_iq3_xxs',
        'from_float_ref': 'quantize_row_iq3_xxs_ref',
    },
    'GGML_TYPE_IQ3_S': {
        'type_name': 'iq3_s',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_iq3_s)',
        'is_quantized': True,
        'to_float': 'dequantize_row_iq3_s',
        'from_float_ref': 'quantize_row_iq3_s_ref',
    },
    'GGML_TYPE_IQ2_S': {
        'type_name': 'iq2_s',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_iq2_s)',
        'is_quantized': True,
        'to_float': 'dequantize_row_iq2_s',
        'from_float_ref': 'quantize_row_iq2_s_ref',
    },
    'GGML_TYPE_IQ1_S': {
        'type_name': 'iq1_s',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_iq1_s)',
        'is_quantized': True,
        'to_float': 'dequantize_row_iq1_s',
        'from_float_ref': None,
    },
    'GGML_TYPE_IQ1_M': {
        'type_name': 'iq1_m',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_iq1_m)',
        'is_quantized': True,
        'to_float': 'dequantize_row_iq1_m',
        'from_float_ref': None,
    },
    'GGML_TYPE_IQ4_NL': {
        'type_name': 'iq4_nl',
        'blck_size': 'QK4_NL',
        'type_size': 'sizeof(block_iq4_nl)',
        'is_quantized': True,
        'to_float': 'dequantize_row_iq4_nl',
        'from_float_ref': 'quantize_row_iq4_nl_ref',
    },
    'GGML_TYPE_IQ4_XS': {
        'type_name': 'iq4_xs',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_iq4_xs)',
        'is_quantized': True,
        'to_float': 'dequantize_row_iq4_xs',
        'from_float_ref': 'quantize_row_iq4_xs_ref',
    },
    'GGML_TYPE_Q8_K': {
        'type_name': 'q8_K',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_q8_K)',
        'is_quantized': True,
    },
    'GGML_TYPE_BF16': {
        'type_name': 'bf16',
        'blck_size': 1,
        'type_size': 2,  # sizeof(ggml_bf16_t)
        'is_quantized': False,
        'to_float': 'ggml_bf16_to_fp32_row',
        'from_float_ref': 'ggml_fp32_to_bf16_row_ref',
    },
    'GGML_TYPE_TQ1_0': {
        'type_name': 'tq1_0',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_tq1_0)',
        'is_quantized': True,
        'to_float': 'dequantize_row_tq1_0',
        'from_float_ref': 'quantize_row_tq1_0_ref',
    },
    'GGML_TYPE_TQ2_0': {
        'type_name': 'tq2_0',
        'blck_size': 'QK_K',
        'type_size': 'sizeof(block_tq2_0)',
        'is_quantized': True,
        'to_float': 'dequantize_row_tq2_0',
        'from_float_ref': 'quantize_row_tq2_0_ref',
    },
    'GGML_TYPE_IQ4_NL_4_4': {
        'type_name': 'TYPE_IQ4_NL_4_4 REMOVED, use IQ4_NL with runtime repacking',
        'blck_size': 0,
        'type_size': 0,
        'is_quantized': False,
    },
    'GGML_TYPE_IQ4_NL_4_8': {
        'type_name': 'TYPE_IQ4_NL_4_8 REMOVED, use IQ4_NL with runtime repacking',
        'blck_size': 0,
        'type_size': 0,
        'is_quantized': False,
    },
    'GGML_TYPE_IQ4_NL_8_8': {
        'type_name': 'TYPE_IQ4_NL_8_8 REMOVED, use IQ4_NL with runtime repacking',
        'blck_size': 0,
        'type_size': 0,
        'is_quantized': False,
    },
}